{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\components\\\\PokemonList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PokemonCard from './PokemonCard';\nimport Pagination from './Pagination';\nimport { getTypeColor } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonList({\n  currentPage,\n  onPageChange,\n  onPokemonClick\n}) {\n  _s();\n  const [pokemonList, setPokemonList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(currentPage - 1) * 24}&limit=24`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch Pokemon');\n        }\n        const data = await response.json();\n        const pokemonDetailsPromises = data.results.map(pokemon => fetchPokemonDetails(pokemon.url));\n        const pokemonDetails = await Promise.all(pokemonDetailsPromises);\n        setPokemonList(pokemonDetails);\n      } catch (error) {\n        console.error('Error fetching Pokemon:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPokemon();\n  }, [currentPage]);\n  const fetchPokemonDetails = async url => {\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon details');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon details:', error);\n    }\n  };\n  const handleNextPage = () => {\n    onPageChange(currentPage + 1);\n  };\n  const handlePrevPage = () => {\n    onPageChange(currentPage - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-list\",\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onPageChange: onPageChange,\n      onPrevPage: handlePrevPage,\n      onNextPage: handleNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : pokemonList && pokemonList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-cards-container\",\n      children: pokemonList.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(PokemonCard, {\n          pokemon: pokemon,\n          onClick: () => onPokemonClick(pokemon.url)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, pokemon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Pokemon found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonList, \"6yyaaH5hqJtYUpV48Kfju9uqdgA=\");\n_c = PokemonList;\nexport default PokemonList;\n\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport { getTypeColor } from './utils';\r\n\r\nfunction PokemonList({ currentPage, onPageChange, onPokemonClick }) {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(currentPage - 1) * 20}&limit=20`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon');\r\n        }\r\n        const data = await response.json();\r\n        const pokemonDetailsPromises = data.results.map((pokemon) => fetchPokemonDetails(pokemon.url));\r\n        const pokemonDetails = await Promise.all(pokemonDetailsPromises);\r\n        setPokemonList(pokemonDetails);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, [currentPage]);\r\n\r\n  const fetchPokemonDetails = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch Pokemon details');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching Pokemon details:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div className=\"pokemon-cards-container\">\r\n          {pokemonList.map((pokemon) => (\r\n            <div key={pokemon.id} className=\"pokemon-card-wrapper\">\r\n              <PokemonCard pokemon={pokemon} onClick={() => onPokemonClick(`/pokemon/${pokemon.id}`)} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n\r\n\r\n\r\n\r\n// PokemonList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport '../App.css';\r\n\r\nfunction PokemonList() {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=20`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon');\r\n        }\r\n        const data = await response.json();\r\n        setPokemonList(data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        pokemonList.map((pokemon, index) => (\r\n          <PokemonCard key={index} pokemon={pokemon} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n*/\n\n//<div className=\"pokemon-type\" style={{ backgroundColor: getTypeColor(pokemon.types || []) }}>\n//{pokemon.types ? pokemon.types.map((type) => type.type.name).join(', ') : 'Unknown'}\n//</div>\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useState","useEffect","PokemonCard","Pagination","getTypeColor","jsxDEV","_jsxDEV","PokemonList","currentPage","onPageChange","onPokemonClick","_s","pokemonList","setPokemonList","loading","setLoading","fetchPokemon","response","fetch","ok","Error","data","json","pokemonDetailsPromises","results","map","pokemon","fetchPokemonDetails","url","pokemonDetails","Promise","all","error","console","handleNextPage","handlePrevPage","className","children","onPrevPage","onNextPage","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/components/PokemonList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport Pagination  from './Pagination';\r\nimport { getTypeColor } from './utils';\r\n\r\nfunction PokemonList({ currentPage, onPageChange, onPokemonClick }) {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(currentPage - 1) * 24}&limit=24`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon');\r\n        }\r\n        const data = await response.json();\r\n        const pokemonDetailsPromises = data.results.map((pokemon) => fetchPokemonDetails(pokemon.url));\r\n        const pokemonDetails = await Promise.all(pokemonDetailsPromises);\r\n        setPokemonList(pokemonDetails);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, [currentPage]);\r\n\r\n  const fetchPokemonDetails = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch Pokemon details');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching Pokemon details:', error);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n   \r\n    <div className=\"pokemon-list\">\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        onPageChange={onPageChange}\r\n        onPrevPage={handlePrevPage}\r\n        onNextPage={handleNextPage}\r\n      />\r\n        {loading ? (\r\n        <div>Loading...</div>\r\n      ) :\r\n    pokemonList && pokemonList.length > 0 ? (\r\n      <div className=\"pokemon-cards-container\">\r\n        {pokemonList.map((pokemon) => (\r\n          <div key={pokemon.id} className=\"pokemon-card-wrapper\">\r\n            {/* Pass onPokemonClick handler to PokemonCard */}\r\n            <PokemonCard pokemon={pokemon} onClick={() => onPokemonClick(pokemon.url)} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <div>No Pokemon found.</div>\r\n    )}\r\n   </div>\r\n  );\r\n\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport { getTypeColor } from './utils';\r\n\r\nfunction PokemonList({ currentPage, onPageChange, onPokemonClick }) {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(currentPage - 1) * 20}&limit=20`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon');\r\n        }\r\n        const data = await response.json();\r\n        const pokemonDetailsPromises = data.results.map((pokemon) => fetchPokemonDetails(pokemon.url));\r\n        const pokemonDetails = await Promise.all(pokemonDetailsPromises);\r\n        setPokemonList(pokemonDetails);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, [currentPage]);\r\n\r\n  const fetchPokemonDetails = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch Pokemon details');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching Pokemon details:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div className=\"pokemon-cards-container\">\r\n          {pokemonList.map((pokemon) => (\r\n            <div key={pokemon.id} className=\"pokemon-card-wrapper\">\r\n              <PokemonCard pokemon={pokemon} onClick={() => onPokemonClick(`/pokemon/${pokemon.id}`)} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n\r\n\r\n\r\n\r\n// PokemonList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport '../App.css';\r\n\r\nfunction PokemonList() {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=20`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon');\r\n        }\r\n        const data = await response.json();\r\n        setPokemonList(data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        pokemonList.map((pokemon, index) => (\r\n          <PokemonCard key={index} pokemon={pokemon} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n*/\r\n\r\n//<div className=\"pokemon-type\" style={{ backgroundColor: getTypeColor(pokemon.types || []) }}>\r\n//{pokemon.types ? pokemon.types.map((type) => type.type.name).join(', ') : 'Unknown'}\r\n//</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}