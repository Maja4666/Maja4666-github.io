{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\components\\\\PokemonList.js\",\n  _s = $RefreshSig$();\n// PokemonList.js\nimport React, { useState, useEffect } from 'react';\nimport PokemonCard from './PokemonCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonList({\n  currentPage,\n  onPageChange,\n  onPokemonClick\n}) {\n  _s();\n  const [pokemonList, setPokemonList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(currentPage - 1) * 20}&limit=20`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch Pokemon');\n        }\n        const data = await response.json();\n        setPokemonList(data.results);\n      } catch (error) {\n        console.error('Error fetching Pokemon:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPokemon();\n  }, [currentPage]);\n  const getTypeColor = type => {\n    // Define colors for different Pokemon types\n    const typeColors = {\n      normal: '#A8A878',\n      fire: '#F08030',\n      water: '#6890F0',\n      grass: '#78C850',\n      electric: '#F8D030',\n      ice: '#98D8D8',\n      fighting: '#C03028',\n      poison: '#A040A0',\n      ground: '#E0C068',\n      flying: '#A890F0',\n      psychic: '#F85888',\n      bug: '#A8B820',\n      rock: '#B8A038',\n      ghost: '#705898',\n      dark: '#705848',\n      dragon: '#7038F8',\n      steel: '#B8B8D0',\n      fairy: '#EE99AC'\n    };\n\n    // Return the color for the given type, or a default color if not found\n    return typeColors[type] || '#B0B0B0'; // Default gray color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-list\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : pokemonList.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-card-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-type\",\n        style: {\n          backgroundColor: getTypeColor(pokemon.type)\n        },\n        children: pokemon.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PokemonCard, {\n        pokemon: pokemon,\n        onClick: () => onPokemonClick(pokemon.url)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, pokemon.url, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonList, \"6yyaaH5hqJtYUpV48Kfju9uqdgA=\");\n_c = PokemonList;\nexport default PokemonList;\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useState","useEffect","PokemonCard","jsxDEV","_jsxDEV","PokemonList","currentPage","onPageChange","onPokemonClick","_s","pokemonList","setPokemonList","loading","setLoading","fetchPokemon","response","fetch","ok","Error","data","json","results","error","console","getTypeColor","type","typeColors","normal","fire","water","grass","electric","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dark","dragon","steel","fairy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pokemon","style","backgroundColor","onClick","url","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/components/PokemonList.js"],"sourcesContent":["// PokemonList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\n\r\nfunction PokemonList({ currentPage, onPageChange, onPokemonClick }) {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(currentPage - 1) * 20}&limit=20`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon');\r\n        }\r\n        const data = await response.json();\r\n        setPokemonList(data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, [currentPage]);\r\n\r\n  const getTypeColor = (type) => {\r\n    // Define colors for different Pokemon types\r\n    const typeColors = {\r\n      normal: '#A8A878',\r\n      fire: '#F08030',\r\n      water: '#6890F0',\r\n      grass: '#78C850',\r\n      electric: '#F8D030',\r\n      ice: '#98D8D8',\r\n      fighting: '#C03028',\r\n      poison: '#A040A0',\r\n      ground: '#E0C068',\r\n      flying: '#A890F0',\r\n      psychic: '#F85888',\r\n      bug: '#A8B820',\r\n      rock: '#B8A038',\r\n      ghost: '#705898',\r\n      dark: '#705848',\r\n      dragon: '#7038F8',\r\n      steel: '#B8B8D0',\r\n      fairy: '#EE99AC',\r\n    };\r\n\r\n    // Return the color for the given type, or a default color if not found\r\n    return typeColors[type] || '#B0B0B0'; // Default gray color\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {loading ? (\r\n        <div>Loading...</div> ) : (\r\n        pokemonList.map((pokemon) => (\r\n          <div key={pokemon.url} className=\"pokemon-card-wrapper\">\r\n            <div className=\"pokemon-type\" style={{ backgroundColor: getTypeColor(pokemon.type) }}>\r\n              {pokemon.type}\r\n            </div>\r\n            <PokemonCard pokemon={pokemon} onClick={() => onPokemonClick(pokemon.url)} />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC;QAChB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2C,CAACV,WAAW,GAAG,CAAC,IAAI,EAAG,WAAU,CAAC;QAC3G,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,cAAc,CAACQ,IAAI,CAACE,OAAO,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,MAAMkB,YAAY,GAAIC,IAAI,IAAK;IAC7B;IACA,MAAMC,UAAU,GAAG;MACjBC,MAAM,EAAE,SAAS;MACjBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,SAAS;MAChBC,QAAQ,EAAE,SAAS;MACnBC,GAAG,EAAE,SAAS;MACdC,QAAQ,EAAE,SAAS;MACnBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,SAAS;MAClBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE;IACT,CAAC;;IAED;IACA,OAAOlB,UAAU,CAACD,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;EACxC,CAAC;EAED,oBACErB,OAAA;IAAKyC,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BlC,OAAO,gBACNR,OAAA;MAAA0C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACrBxC,WAAW,CAACyC,GAAG,CAAEC,OAAO,iBACtBhD,OAAA;MAAuByC,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACrD1C,OAAA;QAAKyC,SAAS,EAAC,cAAc;QAACQ,KAAK,EAAE;UAAEC,eAAe,EAAE9B,YAAY,CAAC4B,OAAO,CAAC3B,IAAI;QAAE,CAAE;QAAAqB,QAAA,EAClFM,OAAO,CAAC3B;MAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACN9C,OAAA,CAACF,WAAW;QAACkD,OAAO,EAAEA,OAAQ;QAACG,OAAO,EAAEA,CAAA,KAAM/C,cAAc,CAAC4C,OAAO,CAACI,GAAG;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAJrEE,OAAO,CAACI,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKhB,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzC,EAAA,CAlEQJ,WAAW;AAAAoD,EAAA,GAAXpD,WAAW;AAoEpB,eAAeA,WAAW;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}