{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\components\\\\PokemonDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonDetails({\n  pokemonUrl\n}) {\n  _s();\n  const [pokemonDetails, setPokemonDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemonDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(pokemonUrl);\n        if (!response.ok) {\n          throw new Error('Failed to fetch Pokemon details');\n        }\n        const data = await response.json();\n        setPokemonDetails(data);\n      } catch (error) {\n        console.error('Error fetching Pokemon details:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (pokemonUrl) {\n      fetchPokemonDetails();\n    }\n  }, [pokemonUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: pokemonDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonDetails.id}.png`,\n      alt: pokemonDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Abilities:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pokemonDetails.abilities.map((ability, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ability.ability.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonDetails, \"7ZVL0LX6EF12i0N2duntnjH1bF4=\");\n_c = PokemonDetails;\nexport default PokemonDetails;\n\n/*\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction PokemonDetails({ pokemonUrl }) {\r\n  const [pokemonDetails, setPokemonDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemonDetails = async () => {\r\n      try {\r\n        const response = await fetch(pokemonUrl);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon details');\r\n        }\r\n        const data = await response.json();\r\n        setPokemonDetails(data);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon details:', error);\r\n      }\r\n    };\r\n\r\n    if (pokemonUrl) {\r\n      fetchPokemonDetails();\r\n    }\r\n  }, [pokemonUrl]);\r\n\r\n  if (!pokemonDetails) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokemon-details\">\r\n      <h2>{pokemonDetails.name}</h2>\r\n      <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonDetails.id}.png`} alt={pokemonDetails.name} />\r\n      <div>\r\n        <h3>Abilities:</h3>\r\n        <ul>\r\n          {pokemonDetails.abilities.map((ability, index) => (\r\n            <li key={index}>{ability.ability.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonDetails;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"PokemonDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PokemonDetails","pokemonUrl","_s","pokemonDetails","setPokemonDetails","loading","setLoading","fetchPokemonDetails","response","fetch","ok","Error","data","json","error","console","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","id","alt","abilities","map","ability","index","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/components/PokemonDetails.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction PokemonDetails({ pokemonUrl }) {\r\n  const [pokemonDetails, setPokemonDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemonDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(pokemonUrl);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon details');\r\n        }\r\n        const data = await response.json();\r\n        setPokemonDetails(data);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon details:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (pokemonUrl) {\r\n      fetchPokemonDetails();\r\n    }\r\n  }, [pokemonUrl]);\r\n\r\n\r\n  return (\r\n    <div className=\"pokemon-details\">\r\n      <h2>{pokemonDetails.name}</h2>\r\n      <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonDetails.id}.png`} alt={pokemonDetails.name} />\r\n      <div>\r\n        <h3>Abilities:</h3>\r\n        <ul>\r\n          {pokemonDetails.abilities.map((ability, index) => (\r\n            <li key={index}>{ability.ability.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonDetails;\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction PokemonDetails({ pokemonUrl }) {\r\n  const [pokemonDetails, setPokemonDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemonDetails = async () => {\r\n      try {\r\n        const response = await fetch(pokemonUrl);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch Pokemon details');\r\n        }\r\n        const data = await response.json();\r\n        setPokemonDetails(data);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon details:', error);\r\n      }\r\n    };\r\n\r\n    if (pokemonUrl) {\r\n      fetchPokemonDetails();\r\n    }\r\n  }, [pokemonUrl]);\r\n\r\n  if (!pokemonDetails) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokemon-details\">\r\n      <h2>{pokemonDetails.name}</h2>\r\n      <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonDetails.id}.png`} alt={pokemonDetails.name} />\r\n      <div>\r\n        <h3>Abilities:</h3>\r\n        <ul>\r\n          {pokemonDetails.abilities.map((ability, index) => (\r\n            <li key={index}>{ability.ability.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonDetails;\r\n\r\n*/"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC;QAChB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACR,UAAU,CAAC;QACxC,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;QACpD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,iBAAiB,CAACQ,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIL,UAAU,EAAE;MACdM,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAGhB,oBACEF,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,EAAKd,cAAc,CAACe;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9BvB,OAAA;MAAKwB,GAAG,EAAG,4EAA2EpB,cAAc,CAACqB,EAAG,MAAM;MAACC,GAAG,EAAEtB,cAAc,CAACe;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3IvB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBvB,OAAA;QAAAkB,QAAA,EACGd,cAAc,CAACuB,SAAS,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3C9B,OAAA;UAAAkB,QAAA,EAAiBW,OAAO,CAACA,OAAO,CAACV;QAAI,GAA5BW,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4B,CAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAzCQF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA2CvB,eAAeA,cAAc;;AAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}