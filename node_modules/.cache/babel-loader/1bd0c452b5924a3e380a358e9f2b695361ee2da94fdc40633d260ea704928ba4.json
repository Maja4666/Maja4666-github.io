{"ast":null,"code":"import'./App.css';import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import PokemonList from'./components/PokemonList';import PokemonDetailsPage from'./Pages/PokemonDetailsPage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[loading,setLoading]=useState(false);const handlePageChange=async page=>{setCurrentPage(page);};useEffect(()=>{handlePageChange(currentPage);},[currentPage]);return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pokedex\"}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(PokemonList,{currentPage:currentPage,onPageChange:handlePageChange,loading:loading})}),/*#__PURE__*/_jsx(Route,{path:\"/pokemon/:id\",element:/*#__PURE__*/_jsx(PokemonDetailsPage,{})})]})]})});}export default App;/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","PokemonList","PokemonDetailsPage","jsx","_jsx","jsxs","_jsxs","App","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","handlePageChange","page","children","className","path","element","onPageChange"],"sources":["C:/Users/brixe/Documents/GitHub/Maja4666-github.io/src/App.js"],"sourcesContent":["\nimport './App.css'\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetailsPage from './Pages/PokemonDetailsPage';\n\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, [currentPage]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<PokemonList currentPage={currentPage} onPageChange={handlePageChange} loading={loading} />}/>\n          <Route path=\"/pokemon/:id\" element={<PokemonDetailsPage />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\n"],"mappings":"AACA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,kBAAkB,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG5D,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAmB,gBAAgB,CAAG,KAAO,CAAAC,IAAI,EAAK,CACvCN,cAAc,CAACM,IAAI,CAAC,CACtB,CAAC,CAEDnB,SAAS,CAAC,IAAM,CACdkB,gBAAgB,CAACN,WAAW,CAAC,CAC/B,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,mBACEJ,IAAA,CAACN,MAAM,EAAAkB,QAAA,cACLV,KAAA,QAAKW,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClBZ,IAAA,OAAAY,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBV,KAAA,CAACP,MAAM,EAAAiB,QAAA,eACLZ,IAAA,CAACJ,KAAK,EACJkB,IAAI,CAAC,GAAG,CACRC,OAAO,cAAEf,IAAA,CAACH,WAAW,EAACO,WAAW,CAAEA,WAAY,CAACY,YAAY,CAAEN,gBAAiB,CAACF,OAAO,CAAEA,OAAQ,CAAE,CAAE,CAAC,CAAC,cACzGR,IAAA,CAACJ,KAAK,EAACkB,IAAI,CAAC,cAAc,CAACC,OAAO,cAAEf,IAAA,CAACF,kBAAkB,GAAE,CAAE,CAAE,CAAC,EACxD,CAAC,EACN,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAK,GAAG,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}