{"ast":null,"code":"// utils.js\nexport const getTypeColor = types => {\n  const typeColors = {\n    normal: '#A8A878',\n    fire: '#F08030',\n    water: '#6890F0',\n    grass: '#78C850',\n    electric: '#F8D030',\n    ice: '#98D8D8',\n    fighting: '#C03028',\n    poison: '#A040A0',\n    ground: '#E0C068',\n    flying: '#A890F0',\n    psychic: '#F85888',\n    bug: '#A8B820',\n    rock: '#B8A038',\n    ghost: '#705898',\n    dark: '#705848',\n    dragon: '#7038F8',\n    steel: '#B8B8D0',\n    fairy: '#EE99AC'\n  };\n\n  // Check if types is defined and not empty\n  if (types && types.length > 0) {\n    const typeColor = types.find(type => typeColors[type.type.name]);\n    return typeColor ? typeColors[typeColor.type.name] : '#B0B0B0'; // Default gray color if type is not found\n  } else {\n    return '#B0B0B0'; // Default gray color if types is undefined or empty\n  }\n};","map":{"version":3,"names":["getTypeColor","types","typeColors","normal","fire","water","grass","electric","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dark","dragon","steel","fairy","length","typeColor","find","type","name"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/components/utils.js"],"sourcesContent":["// utils.js\r\nexport const getTypeColor = (types) => {\r\n    const typeColors = {\r\n      normal: '#A8A878',\r\n      fire: '#F08030',\r\n      water: '#6890F0',\r\n      grass: '#78C850',\r\n      electric: '#F8D030',\r\n      ice: '#98D8D8',\r\n      fighting: '#C03028',\r\n      poison: '#A040A0',\r\n      ground: '#E0C068',\r\n      flying: '#A890F0',\r\n      psychic: '#F85888',\r\n      bug: '#A8B820',\r\n      rock: '#B8A038',\r\n      ghost: '#705898',\r\n      dark: '#705848',\r\n      dragon: '#7038F8',\r\n      steel: '#B8B8D0',\r\n      fairy: '#EE99AC',\r\n    };\r\n  \r\n    // Check if types is defined and not empty\r\n    if (types && types.length > 0) {\r\n      const typeColor = types.find((type) => typeColors[type.type.name]);\r\n      return typeColor ? typeColors[typeColor.type.name] : '#B0B0B0'; // Default gray color if type is not found\r\n    } else {\r\n      return '#B0B0B0'; // Default gray color if types is undefined or empty\r\n    }\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMC,UAAU,GAAG;IACjBC,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,SAAS;IACnBC,GAAG,EAAE,SAAS;IACdC,QAAQ,EAAE,SAAS;IACnBC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE,SAAS;IAClBC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE;EACT,CAAC;;EAED;EACA,IAAInB,KAAK,IAAIA,KAAK,CAACoB,MAAM,GAAG,CAAC,EAAE;IAC7B,MAAMC,SAAS,GAAGrB,KAAK,CAACsB,IAAI,CAAEC,IAAI,IAAKtB,UAAU,CAACsB,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAAC;IAClE,OAAOH,SAAS,GAAGpB,UAAU,CAACoB,SAAS,CAACE,IAAI,CAACC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;EAClE,CAAC,MAAM;IACL,OAAO,SAAS,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}