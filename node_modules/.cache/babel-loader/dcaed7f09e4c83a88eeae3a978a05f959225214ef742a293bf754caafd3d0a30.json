{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport Pagination from './components/Pagination';\nimport PokemonDetailsPage from './Pages/PokemonDetailsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const handlePokemonClick = pokemonUrl => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n  const fetchPokemon = async page => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePageChange = async page => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pokedex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PokemonList, {\n            onPageChange: handlePageChange,\n            onPokemonClick: handlePokemonClick,\n            loading: loading,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pokemon/:id\",\n          element: /*#__PURE__*/_jsxDEV(PokemonDetailsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cl6T0kOoYXxZVIjYVRoMZDxYnio=\");\n_c = App;\nexport default App;\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","PokemonList","Pagination","PokemonDetailsPage","jsxDEV","_jsxDEV","App","_s","selectedPokemonUrl","setSelectedPokemonUrl","handlePokemonClick","pokemonUrl","fetchPokemon","page","setLoading","response","fetch","ok","Error","data","json","error","console","handlePageChange","setCurrentPage","setTotalPages","Math","ceil","count","currentPage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onPageChange","onPokemonClick","loading","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/App.js"],"sourcesContent":["\nimport './App.css'\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport Pagination from './components/Pagination';\nimport PokemonDetailsPage from './Pages/PokemonDetailsPage';\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n \n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <Routes>\n          <Route path=\"/\" element={<PokemonList onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} currentPage={currentPage} />} />\n          <Route path=\"/pokemon/:id\" element={<PokemonDetailsPage />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}