{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetailsPage from './Pages/PokemonDetailsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const handlePageChange = async page => {\n    setCurrentPage(page);\n  };\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pokedex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PokemonList, {\n            currentPage: currentPage,\n            onPageChange: handlePageChange,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pokemon/:id\",\n          element: /*#__PURE__*/_jsxDEV(PokemonDetailsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BHhA155sn74Y+mUUPFVyJhdonTE=\");\n_c = App;\nexport default App;\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","PokemonList","PokemonDetailsPage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","handlePageChange","page","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/App.js"],"sourcesContent":["\nimport './App.css'\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetailsPage from './Pages/PokemonDetailsPage';\n\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, [currentPage]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <Routes>\n          \n          <Route\n            path=\"/\"\n            element={<PokemonList currentPage={currentPage} onPageChange={handlePageChange} loading={loading} />}/>\n          <Route path=\"/pokemon/:id\" element={<PokemonDetailsPage />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,kBAAkB,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACvCN,cAAc,CAACM,IAAI,CAAC;EACtB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdiB,gBAAgB,CAACN,WAAW,CAAC;EAC/B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA,CAACN,MAAM;IAAAiB,QAAA,eACLX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBX,OAAA;QAAAW,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBhB,OAAA,CAACL,MAAM;QAAAgB,QAAA,gBAELX,OAAA,CAACJ,KAAK;UACJqB,IAAI,EAAC,GAAG;UACRC,OAAO,eAAElB,OAAA,CAACH,WAAW;YAACM,WAAW,EAAEA,WAAY;YAACgB,YAAY,EAAEV,gBAAiB;YAACF,OAAO,EAAEA;UAAQ;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzGhB,OAAA,CAACJ,KAAK;UAACqB,IAAI,EAAC,cAAc;UAACC,OAAO,eAAElB,OAAA,CAACF,kBAAkB;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CA3BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA6BZ,eAAeA,GAAG;;AAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}