{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\components\\\\PokemonCard.js\";\n// PokemonCard.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonCard({\n  pokemon,\n  onClick\n}) {\n  const getTypeColor = type => {\n    // Define colors for different Pokemon types\n    const typeColors = {\n      normal: '#A8A878',\n      fire: '#F08030',\n      water: '#6890F0',\n      grass: '#78C850',\n      electric: '#F8D030',\n      ice: '#98D8D8',\n      fighting: '#C03028',\n      poison: '#A040A0',\n      ground: '#E0C068',\n      flying: '#A890F0',\n      psychic: '#F85888',\n      bug: '#A8B820',\n      rock: '#B8A038',\n      ghost: '#705898',\n      dark: '#705848',\n      dragon: '#7038F8',\n      steel: '#B8B8D0',\n      fairy: '#EE99AC'\n    };\n\n    // Return the color for the given type, or a default color if not found\n    return typeColors[type] || '#B0B0B0'; // Default gray color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-card\",\n    onClick: onClick,\n    style: {\n      backgroundColor: getTypeColor(pokemon.type)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: pokemon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.url.split('/')[6]}.png`,\n      alt: pokemon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PokemonCard","pokemon","onClick","getTypeColor","type","typeColors","normal","fire","water","grass","electric","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dark","dragon","steel","fairy","className","style","backgroundColor","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","url","split","alt","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/components/PokemonCard.js"],"sourcesContent":["// PokemonCard.js\r\nimport React from 'react';\r\n\r\n\r\nfunction PokemonCard({ pokemon, onClick }) {\r\n  const getTypeColor = (type) => {\r\n    // Define colors for different Pokemon types\r\n    const typeColors = {\r\n      normal: '#A8A878',\r\n      fire: '#F08030',\r\n      water: '#6890F0',\r\n      grass: '#78C850',\r\n      electric: '#F8D030',\r\n      ice: '#98D8D8',\r\n      fighting: '#C03028',\r\n      poison: '#A040A0',\r\n      ground: '#E0C068',\r\n      flying: '#A890F0',\r\n      psychic: '#F85888',\r\n      bug: '#A8B820',\r\n      rock: '#B8A038',\r\n      ghost: '#705898',\r\n      dark: '#705848',\r\n      dragon: '#7038F8',\r\n      steel: '#B8B8D0',\r\n      fairy: '#EE99AC',\r\n    };\r\n\r\n    // Return the color for the given type, or a default color if not found\r\n    return typeColors[type] || '#B0B0B0'; // Default gray color\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-card\" onClick={onClick} style={{ backgroundColor: getTypeColor(pokemon.type) }}>\r\n      <h3>{pokemon.name}</h3>\r\n      <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.url.split('/')[6]}.png`} alt={pokemon.name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;\r\n\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EACzC,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B;IACA,MAAMC,UAAU,GAAG;MACjBC,MAAM,EAAE,SAAS;MACjBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,SAAS;MAChBC,QAAQ,EAAE,SAAS;MACnBC,GAAG,EAAE,SAAS;MACdC,QAAQ,EAAE,SAAS;MACnBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,SAAS;MAClBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE;IACT,CAAC;;IAED;IACA,OAAOlB,UAAU,CAACD,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;EACxC,CAAC;EAED,oBACEL,OAAA;IAAKyB,SAAS,EAAC,cAAc;IAACtB,OAAO,EAAEA,OAAQ;IAACuB,KAAK,EAAE;MAAEC,eAAe,EAAEvB,YAAY,CAACF,OAAO,CAACG,IAAI;IAAE,CAAE;IAAAuB,QAAA,gBACrG5B,OAAA;MAAA4B,QAAA,EAAK1B,OAAO,CAAC2B;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBjC,OAAA;MAAKkC,GAAG,EAAG,4EAA2EhC,OAAO,CAACiC,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,MAAM;MAACC,GAAG,EAAEnC,OAAO,CAAC2B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzI,CAAC;AAEV;AAACK,EAAA,GAlCQrC,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}