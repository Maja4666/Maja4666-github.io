{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brixe\\\\Desktop\\\\pokedex-app\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: PokemonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pokemon/:id\",\n          component: PokemonDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Switch","PokemonList","PokemonDetails","jsxDEV","_jsxDEV","App","children","className","path","exact","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brixe/Desktop/pokedex-app/src/App.js"],"sourcesContent":["\nimport './App.css'\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={PokemonList} />\n          <Route path=\"/pokemon/:id\" component={PokemonDetails} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n/*\n\nimport React, { useState , useEffect} from 'react';\nimport PokemonList from './components/PokemonList';\nimport PokemonDetails from './components/PokemonDetails';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [selectedPokemonUrl, setSelectedPokemonUrl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handlePokemonClick = (pokemonUrl) => {\n    setSelectedPokemonUrl(pokemonUrl);\n  };\n\n  const fetchPokemon = async (page) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${(page - 1) * 20}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch Pokemon');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching Pokemon:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = async (page) => {\n    setCurrentPage(page);\n    const data = await fetchPokemon(page);\n    setTotalPages(Math.ceil(data.count / 20));\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Pokedex</h1>\n      <PokemonList currentPage={currentPage} onPageChange={handlePageChange} onPokemonClick={handlePokemonClick} loading={loading} />\n      <PokemonDetails pokemonUrl={selectedPokemonUrl} />\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n*/\n"],"mappings":";AACA,OAAO,WAAW;AAElB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACN,MAAM;IAAAQ,QAAA,eACLF,OAAA;MAAKG,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBF,OAAA,CAACJ,MAAM;QAAAM,QAAA,gBACLF,OAAA,CAACL,KAAK;UAACS,IAAI,EAAC,GAAG;UAACC,KAAK;UAACC,SAAS,EAAET;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChDV,OAAA,CAACL,KAAK;UAACS,IAAI,EAAC,cAAc;UAACE,SAAS,EAAER;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACC,EAAA,GAXQV,GAAG;AAaZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}